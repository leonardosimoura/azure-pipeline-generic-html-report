trigger: none
steps:
- task: NodeTool@0
  inputs:
    versionSpec: '12.x'

- script: "npm install -g tfx-cli"

- task: Npm@1
  displayName: 'NPM: Install Task Dependencies'
  inputs:
    workingDir: PublishGenericHtmlReport
    verbose: false

- task: Npm@1
  displayName: 'npm install extension'
  inputs:
    workingDir: .
    verbose: false

#- script: "npm run build"

- script: "npm run build:cidev"

- task: TfxInstaller@3
  displayName: 'Use Node CLI for Azure DevOps'
  inputs:
    version: '0.9.x'
    checkLatest: true

- task: PackageAzureDevOpsExtension@3
  displayName: 'Package Extension: $(Build.SourcesDirectory)'
  name: 'packageStep'
  inputs:
    rootFolder: '$(Build.SourcesDirectory)'
    outputPath: '$(Build.SourcesDirectory)/azure-pipelines-generic-html-report.vsix'
    publisherId: 'LeonardoSilviodeMoura'
    extensionId: 'azure-pipelines-generic-html-report'
    extensionName: 'Generic Html Report'
    extensionVersion: '1.0.$(Build.BuildId)'
    updateTasksVersion: true
    updateTasksVersionType: patch
    extensionVisibility: private

- task: CopyFiles@2
  displayName: 'Copy Files'
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    Contents: '**.vsix'
    TargetFolder: '$(Build.ArtifactStagingDirectory)/results'
  condition: succeededOrFailed()

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/results'
  condition: succeededOrFailed()
